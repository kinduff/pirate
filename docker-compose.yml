version: "3.2"
services:
# Radarr - https://hotio.dev/containers/radarr
# <mkdir /volume1/docker/radarr>
  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/radarr:/config:rw
      - ${DOCKER_STORAGE_DIR}:/data:rw
      - ${MOVIES_DIR}:/data/media:rw

# Sonarr - https://hotio.dev/containers/sonarr
# <mkdir /volume1/docker/sonarr>
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/sonarr:/config:rw
      - ${DOCKER_STORAGE_DIR}:/data:rw
      - ${TV_DIR}:/data/media:rw

# Lidarr - https://hotio.dev/containers/lidarr
# <mkdir /volume1/docker/lidarr>
  lidarr:
    container_name: lidarr
    image: ghcr.io/hotio/lidarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - 8686:8686
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/lidarr:/config:rw
      - ${DOCKER_STORAGE_DIR}:/data:rw
      - ${MUSIC_DIR}:/data/media:rw

# Bazarr - https://hotio.dev/containers/bazarr
# <mkdir /volume1/docker/bazarr>
  bazarr:
    container_name: bazarr
    image: ghcr.io/hotio/bazarr:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - 6767:6767
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/bazarr:/config:rw
      - ${MOVIES_DIR}:/data/media/movies:rw
      - ${TV_DIR}:/data/media/tv:rw

# Watchtower (automatic docker container updater) - https://github.com/containrrr/watchtower
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_STOPPED=false
      - WATCHTOWER_MONITOR_ONLY=false
      - WATCHTOWER_SCHEDULE=0 0 4 * * *
      - WATCHTOWER_TIMEOUT=10s
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

# Deluge VPN - https://github.com/linuxserver/docker-deluge
# <mkdir /volume1/docker/delugevpn>
  deluge:
    container_name: deluge
    image: ghcr.io/linuxserver/deluge:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=022
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/deluge:/config:rw
      - ${DOCKER_STORAGE_DIR}/torrents:/data/torrents:rw

# NZBGet - https://hotio.dev/containers/nzbget
# <mkdir /volume1/docker/nzbget>
  nzbget:
    container_name: nzbget
    image: ghcr.io/hotio/nzbget:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/nzbget:/config:rw
      - ${DOCKER_STORAGE_DIR}/usenet:/data/usenet:rw

# Jackett - https://github.com/linuxserver/docker-jackett
# <mkdir /volume1/docker/jackett>
  jackett:
    container_name: jackett
    image: ghcr.io/linuxserver/jackett:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: service:vpn
    depends_on:
      - vpn
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - AUTO_UPDATE=false
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/jackett:/config:rw

# Deemix - https://gitlab.com/Bockiii/deemix-docker
# <mkdir /volume1/docker/deemix>
  deemix:
    container_name: deemix
    image: registry.gitlab.com/bockiii/deemix-docker:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - 6595:6595
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
      - ARL=${DEEMIX_ARL}
      - DEEZUI=false
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/deemix:/config:rw
      - ${MUSIC_DIR}:/downloads:rw

# Calibre - https://hub.docker.com/r/linuxserver/calibre
#
  calibre:
    container_name: calibre
    image: ghcr.io/linuxserver/calibre
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - 8500:8080
      - 8501:8081
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${BOOKS_DIR}:/config

# NZBHydra2 - https://hotio.dev/containers/nzbhydra2
# <mkdir /volume1/docker/nzbhydra2>
  nzbhydra2:
    container_name: nzbhydra2
    image: ghcr.io/linuxserver/nzbhydra2:latest
    restart: unless-stopped
    logging:
      driver: json-file
    network_mode: bridge
    ports:
      - 5076:5076
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${DOCKER_CONFIG_DIR}/nzbhydra2:/config:rw
      - ${DOCKER_STORAGE_DIR}:/downloads:rw

# NordVPN - https://github.com/bubuntux/nordvpn
  vpn:
    container_name: vpn
    image: ghcr.io/bubuntux/nordvpn:v3.9.1
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.rp_filter=2
    devices:
      - /dev/net/tun
    ulimits:
      memlock:
        soft: -1
        hard: -1
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK=002
      - USER=${VPN_USER}
      - PASS=${VPN_PASS}
      - TECHNOLOGY=${VPN_TECHNOLOGY}
      - NETWORK=${VPN_NETWORK}
    ports:
      - 6789:6789/tcp # nzbget
      - 8112:8112 # deluge
      - 6881:6881 # deluge
      - 6881:6881/udp # deluge
      - 9117:9117 # jackett

# Calibre Web - https://hub.docker.com/r/linuxserver/calibre-web
# <mkdir /volume1/docker/calibre-web>
  calibre_web:
    container_name: calibre_web
    image: ghcr.io/linuxserver/calibre-web
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/calibre-web:calibre
    ports:
      - 8083:8083
    volumes:
      - ${DOCKER_CONFIG_DIR}/calibre-web:/config:rw
      - "${BOOKS_DIR}/Calibre\ Library:/books:rw"
